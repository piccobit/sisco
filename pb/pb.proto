syntax = "proto3";

option go_package = "github.com/piccobit/sisco/pb";

package pb;

// Login

service Login {
  rpc Login (LoginRequest) returns (LoginReply) {}
}

message LoginRequest {
  string user = 1;
  string password = 2;
}

message LoginReply {
  string token = 1;
  bool isAdminToken = 2;
}

// RegisterArea

service RegisterArea {
  rpc RegisterArea (RegisterAreaRequest) returns (RegisterAreaReply) {}
}

message RegisterAreaRequest {
  string bearer = 1;
  string area = 2;
  string description = 3;
}

message RegisterAreaReply {
}

// RegisterService

service RegisterService {
  rpc RegisterService (RegisterServiceRequest) returns (RegisterServiceReply) {}
}

message RegisterServiceRequest {
  string bearer = 1;
  string service = 2;
  string area = 3;
  string description = 4;
  string protocol = 5;
  string host = 6;
  string port = 7;
  repeated string tags = 8;
}

message RegisterServiceReply {
}

// DeleteArea

service DeleteArea {
  rpc DeleteArea (DeleteAreaRequest) returns (DeleteAreaReply) {}
}

message DeleteAreaRequest {
  string bearer = 1;
  string area = 2;
}

message DeleteAreaReply {
}

// DeleteService

service DeleteService {
  rpc DeleteService (DeleteServiceRequest) returns (DeleteServiceReply) {}
}

message DeleteServiceRequest {
  string bearer = 1;
  string service = 2;
  string area = 3;
}

message DeleteServiceReply {
}

// ListService

service ListService {
  rpc ListService (ListServiceRequest) returns (ListServiceReply) {}
}

message ListServiceRequest {
  string bearer = 1;
  string service = 2;
  string area = 3;
}

message ListServiceReply {
  string service = 1;
  string area = 2;
  string description = 3;
  string protocol = 4;
  string host = 5;
  string port = 6;
  repeated string tags = 7;
}

// ListServices

service ListServices {
  rpc ListServices (ListServicesRequest) returns (ListServicesReply) {}
}

message ListServicesRequest {
  string bearer = 1;
  string area = 2;
}

message Service {
  string name = 1;
  string description = 2;
}

message ListServicesReply {
  repeated Service services = 1;
}

// ListAreas

service ListAreas {
  rpc ListAreas (ListAreasRequest) returns (ListAreasReply) {}
}

message ListAreasRequest {
  string bearer = 1;
}

message Area {
  string name = 1;
  string description = 2;
}

message ListAreasReply {
  repeated Area areas = 1;
}
